x-defaults: &defaults
  networks:
    - project_network
  extra_hosts:
    - "host.docker.internal:host-gateway"
  restart: unless-stopped
  

services:
  flowise:
    <<: [*defaults]
    container_name: ${PROJECT_NAME}_flowise
    image: flowiseai/flowise
    volumes:
      - scripts:/scripts
      - flowise_storage:/root/.flowise
    ports:
        - 3001:3001
    environment:
        - PORT=3001
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; flowise start"

  open-webui:
    <<: [*defaults]
    container_name: ${PROJECT_NAME}_open_webui
    image: ghcr.io/open-webui/open-webui:main
    volumes:
      - scripts:/scripts
      - open_webui_storage:/app/backend/data
    ports:
      - 3000:8080
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434

  postgres:
    <<: [*defaults]
    container_name: ${PROJECT_NAME}_postgres
    image: postgres:16-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - scripts:/scripts
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: [*defaults]
    container_name: ${PROJECT_NAME}_n8n
    image: n8nio/n8n:latest
    ports:
      - 5678:5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET
    links:
      - postgres
    volumes:
      - scripts:/scripts
      - uploads:/uploads
      - persistent_workflows:/persistent_workflows
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/sh
    command:
      - "-c"
      - "bash /scripts/n8n_first_run.sh"

  qdrant:
    <<: [*defaults]
    container_name: ${PROJECT_NAME}_qdrant
    image: qdrant/qdrant
    ports:
      - 6333:6333
    volumes:
      - scripts:/scripts
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    <<: [*defaults]
    profiles: ["cpu"]
    container_name: ${PROJECT_NAME}_ollama
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    environment:
      - MODELS_TO_PULL
    volumes:
      - scripts:/scripts
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    command:
      - "-c"
      - "bash /scripts/ollama_first_run.sh && ollama serve"

  ollama-gpu:
    <<: [*defaults]
    profiles: ["gpu-nvidia"]
    container_name: ${PROJECT_NAME}_ollama
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    environment:
      - MODELS_TO_PULL
    volumes:
      - scripts:/scripts
      - ollama_storage:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    entrypoint: /bin/sh
    command:
      - "-c"
      - "bash /scripts/ollama_first_run.sh && ollama serve"

volumes:
  uploads:
    name: ${PROJECT_NAME}_uploads
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./uploads
  scripts:
    name: ${PROJECT_NAME}_scripts
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./scripts
  persistent_workflows:
    name: ${PROJECT_NAME}_persistent_workflows
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./persistent_workflows
  n8n_storage:
    name: ${PROJECT_NAME}_n8n_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/n8n_storage
  postgres_storage:
    name: ${PROJECT_NAME}_postgres_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/postgres_storage/
  ollama_storage:
    name: ${PROJECT_NAME}_ollama_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/ollama_storage
  qdrant_storage:
    name: ${PROJECT_NAME}_qdrant_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/qdrant_storage
  open_webui_storage:
    name: ${PROJECT_NAME}_open_webui_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/open_webui_storage
  flowise_storage:
    name: ${PROJECT_NAME}_flowise_storage
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./container_dirs/flowise_storage

networks:
  project_network:
    name: ${PROJECT_NAME}_network